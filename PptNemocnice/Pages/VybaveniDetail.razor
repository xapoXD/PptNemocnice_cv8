
@page "/vybaveni/{Id:guid}"
@inject HttpClient Http



<PageTitle>Detail vybaveni</PageTitle>

@if (item == null)
{
 /*   <div class="absolute right-1/2 bottom-1/2  transform translate-x-1/2 translate-y-1/2 ">
        <div class=" border-t-transparent border-solid animate-spin  rounded-full border-teal-600 border-8 h-16 w-16"></div>
    </div>
    */

     <Loader/>
    return;
}

<div class="grid grid-cols-2 max-w-md"> 

  <div class="bg-blue-400 ">Název</div>
  <div class="bg-red-500">@item.Nazev</div>

   <div class="bg-blue-400">Cena</div>
  <div class="bg-red-500">@item.PriceCzk</div>

   <div class="bg-blue-400">Nakoupeno</div>
  <div class="bg-red-500">@item.DateTime.ToString("yyyy-MM-dd")</div>
        
         <button @onclick="() => Revize()" class="bg-green-400 twbtn">Provést revizi</button>
    
   <div class="col-span-2">Revize:


     @foreach(var rev in item.Revizes)
        {
            <div> Nazev: @rev.Nazev Datum a cas: @rev.DateTime.ToString("yyyy-MM-dd HH:mm:ss")</div>
        }
    </div>

     <div class="col-span-2">Ukony:

     @foreach(var rev in item.Ukons)
        {
            <div> Nazev: @rev.Name </div>
                
            <div> Datum a cas: @rev.UkonDateTime.ToString("yyyy-MM-dd HH:mm:ss") </div>

            <div> Pacient: @rev.JmenoPacient @rev.PrijmeniPacient </div>

            <div> Id Ukonu: @rev.Id</div>


        }
    </div>

     </div>

    

    

@code {

    [Parameter] public Guid Id { get; set; }

    // public VybaveniModel? Item;

    VybaveniSRevizemaModel? item;

    protected override async Task OnInitializedAsync()
    {

        // seznamVybaveni = await Http.GetFromJsonAsync<List<VybaveniModel>?>("vybaveni");

        //   seznamVybaveni = await Http.GetFromJsonAsync<List<VybaveniSRevizemaModel>?>("vybaveni");

        item = await Http.GetFromJsonAsync<VybaveniSRevizemaModel>($"vybaveni/{Id}");



    }

    async Task Revize()
    {

        RevizeModel novaRevize = new() { Nazev = "Nova revize z detailu", VybaveniId= Id, DateTime = DateTime.Now};
        var resp = await Http.PostAsJsonAsync("revize", novaRevize);
        if (!resp.IsSuccessStatusCode) return;

        item?.Revizes.Add(novaRevize);

        //Item.LastRevision = novaRevize.DateTime;
    }

}
